{"version":3,"sources":["components/FeedbackOptions/FeedbackOptionsStyled.js","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/SectionStyled.js","components/Section/Section.jsx","components/Statistics/StatisticsStyled.js","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["FeedbackOptionsStyled","styled","div","FeedbackOptions","onLeaveFeedback","type","name","className","onClick","SectionStyled","section","Section","children","title","StatisticsStyled","ul","Statistics","good","neutral","bad","total","positivePercentage","App","state","feedbackIncrement","event","target","setState","prevState","countTotalFeedback","values","Object","map","item","this","parseInt","totalFeedback","options","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAyCeA,EAvCeC,IAAOC,IAAV,8oB,OCqCZC,EAnCS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACzB,OACE,eAAC,EAAD,WACE,wBACEC,KAAK,SACLC,KAAK,OACLC,UAAU,UACVC,QAASJ,EAJX,kBAQA,wBACEC,KAAK,SACLC,KAAK,UACLC,UAAU,aACVC,QAASJ,EAJX,qBAQA,wBACEC,KAAK,SACLC,KAAK,MACLC,UAAU,SACVC,QAASJ,EAJX,qBCXSK,EAVOR,IAAOS,QAAV,uICgBJC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,OACE,eAAC,EAAD,WACE,oBAAIN,UAAU,eAAd,SAA8BM,IAC7BD,MCIQE,EAVUb,IAAOc,GAAV,uLC6BPC,EA3BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,eAAC,EAAD,WACE,6BACE,uCAAUJ,OAEZ,6BACE,0CAAaC,OAEf,6BACE,sCAASC,OAEX,6BACE,iDAAoBC,OAEtB,6BACE,oDAAuBC,EAAvB,cC6COC,E,4MA3DbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,kBAAoB,SAACC,GACnB,IAAMnB,EAAOmB,EAAMC,OAAOpB,KAC1B,EAAKqB,UAAS,SAACC,GACb,OAAO,eACJtB,EAAOsB,EAAUtB,GAAQ,O,EAKhCuB,mBAAqB,WACnB,IAAMC,EAASC,OAAOD,OAAO,EAAKP,OAC9BH,EAAQ,EAIZ,OAHAU,EAAOE,KAAI,SAACC,GACV,OAAQb,GAASa,KAEZb,G,wDAGT,WACE,IAAMA,EAAQc,KAAKL,qBACnB,OAAc,IAAVT,EAAoB,EACjBe,SAAUD,KAAKX,MAAMN,KAAOG,EAAS,O,oBAG9C,WACE,IAAMgB,EAAgBF,KAAKL,qBACrBR,EAAqBa,KAAKb,qBAChC,OACE,qCACE,cAAC,EAAD,CAASR,MAAM,wBAAf,SACE,cAAC,EAAD,CACEwB,QAASH,KAAKX,MACdnB,gBAAiB8B,KAAKV,sBAGzBY,EAAgB,EACf,oBAAI7B,UAAU,mBAAd,+BAEA,cAAC,EAAD,CAASM,MAAM,aAAf,SACE,cAAC,EAAD,CACEI,KAAMiB,KAAKX,MAAMN,KACjBC,QAASgB,KAAKX,MAAML,QACpBC,IAAKe,KAAKX,MAAMJ,IAChBC,MAAOgB,EACPf,mBAAoBA,a,GAnDhBiB,aCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.158b8d10.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst FeedbackOptionsStyled = styled.div` \r\n    text-align: center;\r\n    font-size: 20px;\r\n    \r\n\r\n    button {\r\n        padding: 10px;\r\n        border: 4px solid gray;\r\n        border-radius: 0 20px 0 20px;\r\n        font-weight: 500;\r\n        background-color: transparent;\r\n\r\n        &:not(:last-child){\r\n            margin-right: 20px;\r\n        }\r\n    }\r\n\r\n    .goodBtn{\r\n        &:hover{\r\n            background-color: #76BA1B;\r\n        }\r\n        \r\n    }\r\n\r\n    .neutralBtn{\r\n        &:hover{\r\n            background-color: #ffDFC4;\r\n        }\r\n        \r\n    }\r\n\r\n    .badBtn{\r\n        &:hover{\r\n            background-color: #ff483f;\r\n        }\r\n        \r\n    }\r\n`;\r\n\r\nexport default FeedbackOptionsStyled;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FeedbackOptionsStyled from \"./FeedbackOptionsStyled\";\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback }) => {\r\n  return (\r\n    <FeedbackOptionsStyled>\r\n      <button\r\n        type=\"button\"\r\n        name=\"good\"\r\n        className=\"goodBtn\"\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        Good\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        name=\"neutral\"\r\n        className=\"neutralBtn\"\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        name=\"bad\"\r\n        className=\"badBtn\"\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        Bad\r\n      </button>\r\n    </FeedbackOptionsStyled>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import styled from \"styled-components\";\r\n\r\nconst SectionStyled = styled.section`\r\n min-width: 400px;\r\n margin: 0 auto;\r\n text-align: center;\r\n \r\n .sectionTitle{\r\n     font-size: 40px;\r\n }\r\n`;\r\n\r\nexport default SectionStyled;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SectionStyled from \"./SectionStyled\";\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <SectionStyled>\r\n      <h2 className=\"sectionTitle\">{title}</h2>\r\n      {children}\r\n    </SectionStyled>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import styled from \"styled-components\";\r\n\r\nconst StatisticsStyled = styled.ul`\r\n    text-align: center;\r\n    width: 400px;\r\n    margin: 0 auto;\r\n    text-align: left;\r\n    list-style: none;\r\n    font-size:20px;\r\n    font-weight: 500;\r\n`;\r\n\r\nexport default StatisticsStyled;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StatisticsStyled from \"./StatisticsStyled\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <StatisticsStyled>\r\n      <li>\r\n        <p>Good: {good}</p>\r\n      </li>\r\n      <li>\r\n        <p>Neutral: {neutral}</p>\r\n      </li>\r\n      <li>\r\n        <p>Bad: {bad}</p>\r\n      </li>\r\n      <li>\r\n        <p>Total feedback: {total}</p>\r\n      </li>\r\n      <li>\r\n        <p>Positive feedback: {positivePercentage} %</p>\r\n      </li>\r\n    </StatisticsStyled>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Section from \"./components/Section\";\nimport Statistics from \"./components/Statistics\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  feedbackIncrement = (event) => {\n    const name = event.target.name;\n    this.setState((prevState) => {\n      return {\n        [name]: prevState[name] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const values = Object.values(this.state);\n    let total = 0;\n    values.map((item) => {\n      return (total += item);\n    });\n    return total;\n  };\n\n  positivePercentage() {\n    const total = this.countTotalFeedback();\n    if (total === 0) return 0;\n    return parseInt((this.state.good / total) * 100);\n  }\n\n  render() {\n    const totalFeedback = this.countTotalFeedback();\n    const positivePercentage = this.positivePercentage();\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.feedbackIncrement}\n          />\n        </Section>\n        {totalFeedback < 1 ? (\n          <h2 className=\"noStatisticTitle\">No feedback given</h2>\n        ) : (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={totalFeedback}\n              positivePercentage={positivePercentage}\n            />\n          </Section>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}