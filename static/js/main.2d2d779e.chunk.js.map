{"version":3,"sources":["components/FeedbackOptions/FeedbackOptionsStyled.js","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/SectionStyled.js","components/Section/Section.jsx","components/Statistics/StatisticsStyled.js","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["FeedbackOptionsStyled","styled","div","FeedbackOptions","onLeaveFeedback","options","map","option","type","name","className","onClick","title","uuidv4","SectionStyled","section","Section","children","StatisticsStyled","ul","Statistics","good","neutral","bad","total","positivePercentage","App","state","feedbackIncrement","event","target","setState","prevState","countTotalFeedback","values","Object","item","this","parseInt","totalFeedback","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iaAqCeA,EAnCeC,IAAOC,IAAV,ugB,eC2BZC,EAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,QAC1C,OACE,cAAC,EAAD,UACGA,EAAQC,KAAI,SAACC,GACZ,OACE,wBAEEC,KAAK,SACLC,KAAMF,EAAOE,KACbC,UAAWH,EAAOE,KAClBE,QAASP,EALX,SAOGG,EAAOK,OANHC,qBCCFC,EAVOb,IAAOc,QAAV,2ICgBJC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUL,EAAY,EAAZA,MAC3B,OACE,eAAC,EAAD,WACE,oBAAIF,UAAU,eAAd,SAA8BE,IAC7BK,MCIQC,EAVUjB,IAAOkB,GAAV,0KC6BPC,EA3BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,eAAC,EAAD,WACE,6BACE,uCAAUJ,OAEZ,6BACE,0CAAaC,OAEf,6BACE,sCAASC,OAEX,6BACE,iDAAoBC,OAEtB,6BACE,oDAAuBC,EAAvB,c,QC+COC,E,4MA5DbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,kBAAoB,SAACC,GACnB,IAAMpB,EAAOoB,EAAMC,OAAOrB,KAC1B,EAAKsB,UAAS,SAACC,GACb,OAAO,eACJvB,EAAOuB,EAAUvB,GAAQ,O,EAKhCwB,mBAAqB,WACnB,IAAMC,EAASC,OAAOD,OAAO,EAAKP,OAC9BH,EAAQ,EAIZ,OAHAU,EAAO5B,KAAI,SAAC8B,GACV,OAAQZ,GAASY,KAEZZ,G,wDAGT,WACE,IAAMA,EAAQa,KAAKJ,qBACnB,OAAc,IAAVT,EAAoB,EACjBc,SAAUD,KAAKV,MAAMN,KAAOG,EAAS,O,oBAG9C,WACE,IAAMe,EAAgBF,KAAKJ,qBACrBR,EAAqBY,KAAKZ,qBAEhC,OACE,qCACE,cAAC,EAAD,CAASb,MAAM,wBAAf,SACE,cAAC,EAAD,CACEP,QAASA,EACTD,gBAAiBiC,KAAKT,sBAGzBW,EAAgB,EACf,oBAAI7B,UAAU,mBAAd,+BAEA,cAAC,EAAD,CAASE,MAAM,aAAf,SACE,cAAC,EAAD,CACES,KAAMgB,KAAKV,MAAMN,KACjBC,QAASe,KAAKV,MAAML,QACpBC,IAAKc,KAAKV,MAAMJ,IAChBC,MAAOe,EACPd,mBAAoBA,a,GApDhBe,aCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2d2d779e.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst FeedbackOptionsStyled = styled.div`\n  text-align: center;\n  font-size: 20px;\n\n  button {\n    padding: 10px;\n    border: 4px solid gray;\n    border-radius: 0 20px 0 20px;\n    font-weight: 500;\n    background-color: transparent;\n\n    &:not(:last-child) {\n      margin-right: 20px;\n    }\n  }\n\n  .good {\n    &:hover {\n      background-color: #76ba1b;\n    }\n  }\n\n  .neutral {\n    &:hover {\n      background-color: #ffdfc4;\n    }\n  }\n\n  .bad {\n    &:hover {\n      background-color: #ff483f;\n    }\n  }\n`;\n\nexport default FeedbackOptionsStyled;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FeedbackOptionsStyled from \"./FeedbackOptionsStyled\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => {\r\n  return (\r\n    <FeedbackOptionsStyled>\r\n      {options.map((option) => {\r\n        return (\r\n          <button\r\n            key={uuidv4()}\r\n            type=\"button\"\r\n            name={option.name}\r\n            className={option.name}\r\n            onClick={onLeaveFeedback}\r\n          >\r\n            {option.title}\r\n          </button>\r\n        );\r\n      })}\r\n    </FeedbackOptionsStyled>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import styled from \"styled-components\";\n\nconst SectionStyled = styled.section`\n  min-width: 400px;\n  margin: 0 auto;\n  text-align: center;\n\n  .sectionTitle {\n    font-size: 40px;\n  }\n`;\n\nexport default SectionStyled;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SectionStyled from \"./SectionStyled\";\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <SectionStyled>\r\n      <h2 className=\"sectionTitle\">{title}</h2>\r\n      {children}\r\n    </SectionStyled>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import styled from \"styled-components\";\n\nconst StatisticsStyled = styled.ul`\n  text-align: center;\n  width: 400px;\n  margin: 0 auto;\n  text-align: left;\n  list-style: none;\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport default StatisticsStyled;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StatisticsStyled from \"./StatisticsStyled\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <StatisticsStyled>\r\n      <li>\r\n        <p>Good: {good}</p>\r\n      </li>\r\n      <li>\r\n        <p>Neutral: {neutral}</p>\r\n      </li>\r\n      <li>\r\n        <p>Bad: {bad}</p>\r\n      </li>\r\n      <li>\r\n        <p>Total feedback: {total}</p>\r\n      </li>\r\n      <li>\r\n        <p>Positive feedback: {positivePercentage} %</p>\r\n      </li>\r\n    </StatisticsStyled>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Section from \"./components/Section\";\nimport Statistics from \"./components/Statistics\";\nimport options from \"./data/options.json\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  feedbackIncrement = (event) => {\n    const name = event.target.name;\n    this.setState((prevState) => {\n      return {\n        [name]: prevState[name] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const values = Object.values(this.state);\n    let total = 0;\n    values.map((item) => {\n      return (total += item);\n    });\n    return total;\n  };\n\n  positivePercentage() {\n    const total = this.countTotalFeedback();\n    if (total === 0) return 0;\n    return parseInt((this.state.good / total) * 100);\n  }\n\n  render() {\n    const totalFeedback = this.countTotalFeedback();\n    const positivePercentage = this.positivePercentage();\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.feedbackIncrement}\n          />\n        </Section>\n        {totalFeedback < 1 ? (\n          <h2 className=\"noStatisticTitle\">No feedback given</h2>\n        ) : (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={totalFeedback}\n              positivePercentage={positivePercentage}\n            />\n          </Section>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}